<?xml version="1.0"?>
<!-- This is a launch file for an example on how to bringup of the race perception architecture-->
<launch>
<!-- this flag will configure the system to run with nodes or nodelets-->
<arg name="use_nodelets" default="0"/>
<arg name="use_standalone" default="false"/>
<!--<arg name="use_pr2" default="0"/>-->
<arg name="pdb_source" default="default_pdb"/>


  <group ns="/perception">

	<!-- _________________________________-->
	<!--|                                 |-->
	<!--|             Memory 	      |-->
	<!--|_________________________________|-->

	<!--Launches a race_perception_db node(let) -->
	<include file="$(find race_perception_db)/launch/bringup.launch">
	    <arg name="use_nodelets" value="$(arg use_nodelets)" />
	    <arg name="pdb_source" value="$(arg pdb_source)" />
	    <arg name="name" value="perception_db" />-->
	</include> 

	
	<!-- Launches the nodelet_manager -->
	<group if="$(arg use_nodelets)">
	    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" output="screen" required="true">
		<param name="num_worker_threads" value="10"/>
	    </node>
	</group>
	
	
	<!-- _________________________________-->
	<!--|                                 |-->
	<!--|         Global Param            |-->
	<!--|_________________________________|-->

	<!-- *****************************************************************  -->
	<!--       set name_of_approach and number of experiments parameters    -->
	<!-- *****************************************************************  -->

		<arg name="name_of_approach" default="COR_DL" />
		<param name="/perception/name_of_approach" type="string" value = "$(arg name_of_approach)"/>

		<!-- total_number_of_experiments params -->
		<arg name="total_number_of_experiments" default="3" />
		<param name="/total_number_of_experiments" type="int" value = "$(arg total_number_of_experiments)"/>

		<!-- random_sequence_generator 0 = FLASE, 1 = TRUE-->
		<arg name="random_sequence_generator" default="1" />
		<param name="/perception/random_sequence_generator" type="bool" value = "$(arg random_sequence_generator)"/>

		<!--gui 0 = FLASE, 1 = TRUE-->
		<arg name="gui" default="1" />
		<param name="/perception/gui" type="bool" value = "$(arg gui)"/>


	<!-- ****************************************  -->
	<!--       set dataset_path parameter          -->
	<!-- ****************************************  -->

		<!-- restaurant_object_dataset : "$(env HOME)/datasets/restaurant_object_dataset/"; -->
		<!-- washington_RGBD_object : "$(env HOME)/datasets/washington_short_version/"; -->
		<arg name="dataset_path" default="$(env HOME)/datasets/washington_short_version/" />
		<param name="/perception/dataset_path" type="string" value = "$(arg dataset_path)"/>

	
	<!-- ************************************************************  -->
	<!-- 	set deep_learning_architecture and service parameters      -->
	<!-- ************************************************************  -->

		<arg name="deep_learning_service" default="/RGBD_multiview_service" />
		<param name="/perception/deep_learning_service" type="string" value = "$(arg deep_learning_service)"/>

		<!-- The following base_networks have been implemeneted and can be used: 
			"vgg16_fc1", "vgg16_fc2", "vgg19_fc1", "vgg19_fc2", "xception", "resnet50", "mobileNet",  "mobileNetV2", 
			"denseNet121", "denseNet169", "densenet201", "nasnetLarge", "/nasnetMobile", "inception",  "inceptionResnet" "ICRA2021" --> 
			
		<arg name="base_network" default="mobileNetV2" />
		<param name="/perception/base_network" type="string" value = "$(arg base_network)"/>

		<!-- set the image resolution -->
		<arg name="orthographic_image_resolution" default="150" />
		<param name="/perception/orthographic_image_resolution" type="int" value = "$(arg orthographic_image_resolution)"/>
		
		<!-- max_pooling use "MAX", for average pooling use "AVG", use "APP" for appending-->
		<arg name="pooling_function" default="APP" /> 
		<param name="/perception/pooling_function" type="string" value = "$(arg pooling_function)"/>

		
	<!-- ****************************************  -->
	<!--       	KNN parameters 		       -->
	<!-- ****************************************  -->
		
		<!-- K param for KNN -->
		<arg name="K_for_KNN" default="1" />
		<param name="/perception/K_for_KNN" type="int" value = "$(arg K_for_KNN)"/>


	<!-- ****************************************  -->
	<!--       	Multi View param	       -->
	<!-- ****************************************  -->
	
		<!-- radius - used for generating camera poses -->
		<arg name="radius" default="0.50" />
		<param name="/perception/radius" type="double" value = "$(arg radius)"/>

		<!-- viewpoint_setup [MVCNN, Orthographic, Sphere];-->
		<arg name="viewpoint_setup" default="Orthographic" /> 
		<param name="/perception/viewpoint_setup" type="string" value = "$(arg viewpoint_setup)"/>

		<!-- camera orbit will be elevated by alpha, which defined as alpha = PI / alpha_mvcnn  -->
		<arg name="mvcnn_alpha" default="8" />
		<param name="/perception/mvcnn_alpha" type="int" value = "$(arg mvcnn_alpha)"/>

		<!-- total number of views will be (number_of_cameras_along_z_axis-1)*number_of_cameras_around_z_axis + 2  -->
		<!-- for MVCNN, number_of_cameras_along_z_axis param used to define an orbit elevated by alpha = PI/number_of_cameras_along_z_axis -->
		<!-- number_of_cameras_along_z_axis -->
		<arg name="number_of_cameras_along_z_axis" default="8" />
		<param name="/perception/number_of_cameras_along_z_axis" type="int" value = "$(arg number_of_cameras_along_z_axis)"/>

		<!-- number_of_cameras_along_z_axis -->
		<arg name="number_of_cameras_around_z_axis" default="4" />
		<param name="/perception/number_of_cameras_around_z_axis" type="int" value = "$(arg number_of_cameras_around_z_axis)"/>

	

	<!-- ****************************************  -->
	<!--       	distance functions	       -->
	<!-- ****************************************  -->
	
		<!-- The following distance functions have been implemeneted and can be used: 
			chiSquared, kLDivergance, motyka,  divergence,  euclidean, intersection, manhattan,
			cosine, dice, bhattacharyya, sorensen, canberra, pearson, neyman, gower -->
		
		<arg name="distance_function" default="chiSquared" />
		<param name="/perception/distance_function" type="string" value = "$(arg distance_function)"/>


	<!-- ________________________________-->
	<!--|                               |-->
	<!--|   DO NOT CHANGE THESE PARAMS  |-->
	<!--|_______________________________|-->
	

		<!-- Simulated teacher parameters. -->
		<arg name="protocol_threshold" default="0.67" />
		<param name="/perception/protocol_threshold" type="double" value = "$(arg protocol_threshold)"/>
		<arg name="user_sees_no_improvment_const" default="100" />
		<param name="/perception/user_sees_no_improvment_const" type="int" value = "$(arg user_sees_no_improvment_const)"/>
		<arg name="window_size" default="3" />
		<param name="/perception/window_size" type="int" value = "$(arg window_size)"/>
		

		<!-- Image_normalization 0 = FLASE, 1 = TRUE-->
		<arg name="image_normalization" default="0" /> 
		<param name="/perception/image_normalization" type="bool" value = "$(arg image_normalization)"/>
		
		<!-- multiviews 0 = FLASE, 1 = TRUE-->
		<arg name="multiviews" default="1" /> 
		<param name="/perception/multiviews" type="bool" value = "$(arg multiviews)"/>
		

		<!-- DOWNSAMPLING 0 = FLASE, 1 = TRUE-->
		<arg name="downsampling" default="0" /> 
		<param name="/perception/downsampling" type="bool" value = "$(arg downsampling)"/>
		
		<arg name="downsampling_voxel_size" default="1" />
		<param name="/perception/downsampling_voxel_size" type="double" value = "$(arg downsampling_voxel_size)"/>
		
		
		<!-- new shape descriptor params -->
		<arg name="adaptive_support_lenght" default="0" />
		<param name="/perception/adaptive_support_lenght" type="int" value = "$(arg adaptive_support_lenght)"/>
		
		<arg name="sign" default="1" />
		<param name="/perception/sign" type="int" value = "$(arg sign)"/>
		
		<!-- for large objects like ModelNet it could be 150 and for small objects like IEETA/Washington 20 -->
		<arg name="number_of_bins" default="150" />
		<param name="/perception/number_of_bins" type="int" value = "$(arg number_of_bins)"/>

		<arg name="global_image_width" default="0.2" />
		<param name="/perception/global_image_width" type="double" value = "$(arg global_image_width)"/>
				
		<arg name="off_line_flag" default="0" />
		<param name="/perception/off_line_flag" type="int" value = "$(arg off_line_flag)"/>

		<arg name="recognition_threshold" default="200000000000000" />
		<param name="/perception/recognition_threshold" type="double" value = "$(arg recognition_threshold)"/>
		

        <group ns="/pipeline1">
		

		<!-- _________________________________-->
		<!--|                                 |-->
		<!--|       race_simulated_user       |-->
		<!--|_________________________________|-->
            
	    <include file="$(find rug_simulated_user)/launch/bringup_RGBD_deep_learning.launch">
            <arg name="use_nodelets" value="$(arg use_nodelets)" />
            <arg name="name" value="rug_simulated_user_deep_learning_based_descriptor" />
	    </include>

	</group>
 </group>

</launch>


